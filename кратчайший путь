
#include <iostream>
#include <vector>
#include <queue>
using namespace std;
void Find(vector<vector<int> >& list, int k, int r, int c)
{queue<int> q;
    vector<int> p(k);
    bool a[k];
    for(int i = 0; i < k; i++)
    {a[i] = 0;}
    q.push(r);
    p[r] = -1;
    a[r] = 1;
    while(!q.empty())
    {int n = q.front();
        q.pop();
        for(int i = 0; i<list[n].size(); i++)
        {int t = list[n][i];
            if(!a[t])
            {a[t] = 1;
                q.push(t);
                p[t] = n;}}}
    for(int i = 0 ; i<k; i++)
    {
        cout<< a[i] << "";
    }
    if(!a[c])
    {        cout << "-";
return;
    }
    vector<int> path;
    int length(0);
    for(int i = c; i!=-1; i = p[i])
    {
        path.push_back(i);
    }
    for(unsigned int i = 0; i < path.size(); i++)
    {
        cout << path[i] << "";
        length++;
    }
    cout << "l=" << length-1;}
void smejlist( int k,vector<vector<int> >& list, int arr[][2])
{
    for(int i = 0; i <= k; i++)
    {list[arr[i][0]].push_back(arr[i][1]);
        list[arr[i][1]].push_back(arr[i][0]);
    }
}
int main()
{return 0;
}

